---
to: "{{configuration.embraceSQLRoot}}/client/node-inprocess/index.ts"
---
/* eslint-disable @typescript-eslint/camelcase */

import * as context from "../../context";

/**
* Create an EmbraceSQL client bound to a specific URL.
*/
// eslint-disable-next-line @typescript-eslint/explicit-function-return-type
export const EmbraceSQL = (executor: Map<string, context.Executor>) => {
  const DatabaseMap = {
  {{#eachInMap databases}}
    {{@key}}: {
    {{#treeAMap value.SQLModules database=value}}
      {{#each value}}
      {{> moduleTree this database=@database }}
      {{/each}}
    {{/treeAMap}}
    },
  {{/eachInMap}}
  };
  return DatabaseMap;
};

{{#*inline "moduleTree"}}
{{name}}: {
  {{#if value}}
  {{#if value.namedParameters.length}}
  sql: async (parameters: context.{{value.contextName}}Parameters) : Promise<context.{{value.contextName}}Results> => {
    const e = executor.get("{{value.contextName}}");
    const results = e ? await e(parameters) : [];
    return results as unknown as context.{{value.contextName}}Results;
  }
  {{else}}
  sql: async () : Promise<context.{{value.contextName}}Results> => {
    const e = executor.get("{{value.contextName}}");
    const results = e ? await e({}) : [];
    return results as unknown as context.{{value.contextName}}Results;
  }
  {{/if}}
  {{/if}}
  {{#each children}}
    {{> moduleTree this database=database}}
  {{/each}}
}
{{/inline}}